<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddUserToCompanyQuestion" xml:space="preserve">
    <value>Вы хотите добавить пользователя в компанию?</value>
  </data>
  <data name="Admin" xml:space="preserve">
    <value>Админ</value>
  </data>
  <data name="Audit" xml:space="preserve">
    <value>Аудит</value>
  </data>
  <data name="Brand" xml:space="preserve">
    <value>Бренд</value>
  </data>
  <data name="BrandNameExistError" xml:space="preserve">
    <value>Такое имя бренда уже существует.</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Отмена</value>
  </data>
  <data name="ChangeAdminRoleQuestion" xml:space="preserve">
    <value>Вы действительно хотиде изменить роль администратора?</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Очистить</value>
  </data>
  <data name="Color" xml:space="preserve">
    <value>Цвет</value>
  </data>
  <data name="Companies" xml:space="preserve">
    <value>Компании</value>
  </data>
  <data name="Company" xml:space="preserve">
    <value>Компания</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Подтвердить</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Подтвердите пароль</value>
  </data>
  <data name="Contains" xml:space="preserve">
    <value>Содержит</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Создать</value>
  </data>
  <data name="Creating" xml:space="preserve">
    <value>Создание</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Дата</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Удалить</value>
  </data>
  <data name="DeleteProductQuestion" xml:space="preserve">
    <value>Вы действительно хотите удалить продукт?</value>
  </data>
  <data name="DeleteUserQuestion" xml:space="preserve">
    <value>Вы действительно хотите удалить пользователя?</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Описание</value>
  </data>
  <data name="DoesNotContain" xml:space="preserve">
    <value>Не содержит</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Редактировать</value>
  </data>
  <data name="Editing" xml:space="preserve">
    <value>Редактирование</value>
  </data>
  <data name="EmptyBrandNameError" xml:space="preserve">
    <value>Имя бренда пустое.</value>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>Объект</value>
  </data>
  <data name="EntityId" xml:space="preserve">
    <value>Id объекта</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>Фильтровать</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Привет</value>
  </data>
  <data name="Id" xml:space="preserve">
    <value>Id</value>
  </data>
  <data name="IllegalCharsError" xml:space="preserve">
    <value>Используются запрещенные символы.</value>
  </data>
  <data name="IncorrectPassword" xml:space="preserve">
    <value>Неправильный пароль.</value>
  </data>
  <data name="IncorrectUserName" xml:space="preserve">
    <value>Неправильное имя пользователя.</value>
  </data>
  <data name="IncorrectUserNameOrPassword" xml:space="preserve">
    <value>Неправильное имя пользователя или пароль.</value>
  </data>
  <data name="InvalidNameOrPassword" xml:space="preserve">
    <value>Неверное имя или пароль.</value>
  </data>
  <data name="IsEmty" xml:space="preserve">
    <value>Пустой</value>
  </data>
  <data name="IsEqualTo" xml:space="preserve">
    <value>Равно</value>
  </data>
  <data name="IsGreaterThanOrEqualTo" xml:space="preserve">
    <value>Больше или равно</value>
  </data>
  <data name="IsLessThen" xml:space="preserve">
    <value>Меньше</value>
  </data>
  <data name="IsLessThenOrEqualTo" xml:space="preserve">
    <value>Меньше или равно</value>
  </data>
  <data name="IsNotEmty" xml:space="preserve">
    <value>Не пустой</value>
  </data>
  <data name="IsNotEqualTo" xml:space="preserve">
    <value>Не равно</value>
  </data>
  <data name="IsNotNull" xml:space="preserve">
    <value>Имеет значение</value>
  </data>
  <data name="IsNull" xml:space="preserve">
    <value>Не имеет значения</value>
  </data>
  <data name="ItemsCount" xml:space="preserve">
    <value>Количество элементов</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Язык</value>
  </data>
  <data name="LogIn" xml:space="preserve">
    <value>Войти</value>
  </data>
  <data name="LogOff" xml:space="preserve">
    <value>Выйти</value>
  </data>
  <data name="Long200Characters" xml:space="preserve">
    <value>{0} не может быть длиннее 200 символов.</value>
  </data>
  <data name="ModifiedField" xml:space="preserve">
    <value>Измененное поле</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Имя</value>
  </data>
  <data name="NewCompany" xml:space="preserve">
    <value>Новая компания</value>
  </data>
  <data name="NewProduct" xml:space="preserve">
    <value>Новый продукт</value>
  </data>
  <data name="NextValue" xml:space="preserve">
    <value>Следующее значение</value>
  </data>
  <data name="NotFound" xml:space="preserve">
    <value>Не найдено.</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Пароль</value>
  </data>
  <data name="PasswordDontConfirm" xml:space="preserve">
    <value>Пароли не совпадают.</value>
  </data>
  <data name="PasswordRequireDigit" xml:space="preserve">
    <value>Необходимы цифры в пароле.</value>
  </data>
  <data name="PasswordRequireLength" xml:space="preserve">
    <value>Необходимая длина пароля</value>
  </data>
  <data name="PasswordRequireLower" xml:space="preserve">
    <value>Необходимы строчные буквы в пароле.</value>
  </data>
  <data name="PasswordRequireNonLetterOrDigit" xml:space="preserve">
    <value>Необходимы числа или не буквы в пароле.</value>
  </data>
  <data name="PasswordRequireUpper" xml:space="preserve">
    <value>Необходимы заглавные буквы в пароле.</value>
  </data>
  <data name="PositiveValue" xml:space="preserve">
    <value>{0} должено быть положительным.</value>
  </data>
  <data name="PreviousValue" xml:space="preserve">
    <value>Предыдущее значение</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Количество</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Регистрация</value>
  </data>
  <data name="RemoveUserFromCompanyQuestion" xml:space="preserve">
    <value>Вы хотите удалить пользователя из компании?</value>
  </data>
  <data name="RequiredField" xml:space="preserve">
    <value>Поле является обязательным.</value>
  </data>
  <data name="Roles" xml:space="preserve">
    <value>Роли</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Сохранить</value>
  </data>
  <data name="SelectCompany" xml:space="preserve">
    <value>Выберете компанию</value>
  </data>
  <data name="SignIn" xml:space="preserve">
    <value>Войти</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Статус</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>Пользователь</value>
  </data>
  <data name="UserNameExist" xml:space="preserve">
    <value>имя уже существует.</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Пользователи</value>
  </data>
  <data name="YouDontHaveAccess" xml:space="preserve">
    <value>У вас нет доступа!</value>
  </data>
</root>