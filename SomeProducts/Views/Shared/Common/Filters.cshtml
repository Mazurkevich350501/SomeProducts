
@using R = Resources.LocalResource
@using Type = SomeProducts.CrossCutting.Filter.Model.Type
@model SomeProducts.CrossCutting.Filter.Model.FilterInfo

<div class="row filters-container">
    @for (var i = 0; i < Model.Filters.Count; i++)
    {
        <div class="col-xs-3">
            <h4>
                @Model.Filters.ToArray()[i].FilterName
            </h4>
            <div class="row">
                <div class="col-xs-10 filter-option-input-div">
                    <input class="form-control" 
                           type="@(Model.Filters.ToArray()[i].Type == Type.Numeric ? "number" : "text")"
                           id="@(Model.Filters.ToArray()[i].Option)ValueId"
                           value="@Model.Filters.ToArray()[i].Value" />
                </div>
                <div>
                    @if (Model.Filters.ToArray()[i].Type == Type.Numeric)
                    {
                        @Html.DropDownListFor(m => m.Filters.ToArray()[i].Parameter, new SelectList(Model.NumberFilterParameter, "Key", "Value"),
                            new
                            {
                                @class = "btn btn-default dropdown-toggle filter-param-select",
                                id = $"{Model.Filters.ToArray()[i].Option}ParameterId",
                                value = Model.Filters.ToArray()[i].Parameter
                            })
                    }
                    else
                    {
                        @Html.DropDownListFor(m => m.Filters.ToArray()[i].Parameter, new SelectList(Model.StringFilterParameter, "Key", "Value"),
                            new
                            {
                                @class = "btn btn-default dropdown-toggle filter-param-select",
                                id = $"{Model.Filters.ToArray()[i].Option}ParameterId",
                                value = Model.Filters.ToArray()[i].Parameter
                            })
                    }
                </div>
            </div>
            <span class="field-validation-error" id="validation-@(Model.Filters.ToArray()[i].Option)ValueId"></span>
        </div>
    }
</div>

<div class="row filters-container">
    <div class="col-xs-3">
        <button class="btn btn-primary" id="FilterBtn">@R.Filter</button>
        <button class="btn btn-default" id="clearFiltersBtnId">@R.Clear</button>
    </div>
</div>