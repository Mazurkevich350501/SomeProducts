
@model SomeProducts.Models.ProductModels.ProductViewModel

@{
    ViewBag.Title = "Create";
    bool isEdit = Model.Product.ProductId != 0;
}

<h2>Create</h2>

<form method="post" action=@Url.Action(isEdit ? "Edit" : "Create", "Product") enctype="multipart/form-data">
    @Html.HiddenFor(model => model.Product.ProductId)
    @Html.HiddenFor(model => model.Product.Image)
    @Html.HiddenFor(model => model.Product.ImageType)
    <div class="row">
        <div class="col-lg-8">
            @Html.ValidationMessageFor(model => model.Product.Name)
            <div class="row">
                <h4 class="col-lg-2">Product name</h4>
                @Html.TextBoxFor(m => m.Product.Name, new { @class = "form-control col-lg-5" })
            </div>
            @Html.ValidationMessageFor(model => model.Product.Description)
            <div class="row description-text-area">
                <h4 class="col-lg-2">Description</h4>
                @Html.TextAreaFor(m => m.Product.Description, new { @class = "form-control col-lg-5 pad" })
            </div>
            @Html.ValidationMessageFor(model => model.Product.BrandId)
            <div class="row">
                <h4 class="col-lg-2">Brand</h4>
                @Html.DropDownListFor(m => m.Product.BrandId, new SelectList(Model.Brands, "Key", "Value", Model.Product.BrandId), new { @class="btn btn-default dropdown-toggle" })            
                <button type="button" id="brandEditBtn" class="btn btn-info" data-toggle="modal" data-target="#BrandModal">Edit</button>
            </div>
            @Html.ValidationMessageFor(model => model.Product.Color)
            <div class="row">
                <h4 class="col-lg-2">Color</h4>
                @Html.DropDownListFor(m => m.Product.Color, new SelectList(Model.Colors, "Key", "Value", Model.Product.Color))
            </div>
            @Html.ValidationMessageFor(model => model.Product.Quantity)
            <div class="row">
                <h4 class="col-lg-2">Quantity</h4>
                @Html.TextBoxFor(m => m.Product.Quantity, new { @class = "form-control col-lg-5 pad" })
            </div>
        </div>
        <div class="col-lg-4">
            <img class="image-box" id="image" />
        <div>
            <input type="file" name="file" id="file" />
        </div>
        </div>
    </div>
    <div>
        <input type="submit" class="btn btn-success" value=@(isEdit ? "Save" : "Create") />
        @if (isEdit)
        {
            <button class="btn btn-warning" onclick="">Delete</button>
        }
    </div> 
</form>
    
<div id="BrandModal" class="modal fade" role="dialog">
    <div class="modal-dialog" id="modal_dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Brands</h4>
            </div>
            <div class="modal-body" id="modal-body">     
                <div class="row">
                    <input class="text-left form-control col-lg-10" id="newBrandName" />
                    <button class="btn btn-success glyphicon glyphicon-plus-sign" onclick="addNewBrand()"></button>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" onclick="saveBrandsChanges()">Save</button>
            </div>
        </div>
    </div>
</div>

<script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.js"></script>
<script src="~/bower_components/jquery-simplecolorpicker/jquery.simplecolorpicker.js"></script>
<script src="~/Scripts/ModalView/ModalView.js"></script>
<script src="~/Scripts/Product/ProductControl.js"></script>    
<script src="~/Scripts/Product/ProductColorpicker.js"></script>
<script src="~/Scripts/Product/ProductImageController.js"></script>

<link rel="stylesheet" href="~/bower_components/jquery-simplecolorpicker/jquery.simplecolorpicker.css">
<link rel="stylesheet" href="~/Scripts/ModalView/ModalView.css" />
<link rel="stylesheet" href="~/Scripts/Product/Product.css" />

<script>
    var colorId = '@Html.IdFor(model => model.Product.Color)';
    var brandDropdownId = '@Html.IdFor(model => model.Product.BrandId)';
    var imageDataId = '@Html.IdFor(model => model.Product.Image)';
    var imageTypeId = '@Html.IdFor(model => model.Product.ImageType)';
    var getImageUrl = '@Url.Action("GetImage", "Product")';
    var getBrandsListUrl = '@Url.Action("GetBrandsList", "Product")';
    var isBrandUsingUrl = '@Url.Action("IsBrandUsing", "Product")';
    var saveBrandsChangesUrl = '@Url.Action("SaveBrandsChanges", "Product")'; 

    var id = '#' + colorId;

    $(id).simplecolorpicker();
    $(id).simplecolorpicker('destroy');
    $(id).simplecolorpicker({
        picker: true
    })
</script>
