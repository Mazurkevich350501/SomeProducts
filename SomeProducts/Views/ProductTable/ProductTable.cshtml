
@using PagedList.Mvc
@using SomeProducts.CrossCutting.Helpers
@using SomeProducts.Helpers
@using R = Resources.LocalResource
@model SomeProducts.PresentationServices.Models.ProductTable.ProductTableViewModel
@if (User.IsInCompany())
{
    @Html.Partial("Common/Filters", Model.FilterInfo)
    <div class="row-fluid">
        <div class="box span12">
            <div class="box-header">
                <h2><i class="halflings-icon white align-justify"></i><span class="break"></span>@R.Products</h2>
            </div>
            <div class="box-content">            
                <div class="dropdown" style="display: inline-block">
                    <div class="btn btn-primary dropdown-toggle" data-toggle="dropdown">
                        @R.ItemsCount: @Model.PageInfo.ItemsCount
                        <span class="caret"></span>
                    </div>
                    <ul class="dropdown-menu">
                        @for (var i = 5; i <= SomeProducts.CrossCutting.Constants.Constants.MaxItemsCountPerPage; i += 5)
                        {
                            <li>
                                <a class="dropdown-item" href=@Url.Action("Show", "ProductTable", new
                                                              {
                                                                  page = Model.PageInfo.Page, count = i,
                                                                  by = Model.PageInfo.SortingOption, filter = Model.JsonFilters
                                                              })>@(i)</a>
                            </li>
                        }
                    </ul>
                </div>
                <table class="table table-tr-line">
                        <thead>
                        <tr>
                            <th>

                            </th>
                            <th>
                                <div id="th-name" data-type="sort" data-name="Name" class="pointer">
                                    @R.Name
                                </div>
                            </th>
                            <th>@R.Description</th>
                            <th>
                                <div id="th-brand" data-type="sort" data-name="Brand" class="pointer">
                                    @R.Brand
                                </div>
                            </th>
                            <th>
                                <div id="th-quantity" data-type="sort" data-name="Quantity" class="pointer">
                                    @R.Quantity
                                </div>
                            </th>
                            <th></th>
                        </tr>
                        </thead>
                        <tbody>
                        @foreach (var product in Model.Items)
                        {

                            <tr @(User.IsInUserRole(UserRole.Admin) || User.IsInUserRole(UserRole.User) ? $"onclick=window.open('{Url.Action("Edit", "Product", new {id = product.Id})}')" : "")
                                class="pointer">
                                <td>
                                    <div class="product-table-image-div">
                                        @if (@product.Image != null)
                                        {
                                            <img src="data:@product.ImageType;base64,@Convert.ToBase64String(product.Image)" alt=""
                                                 style="border: 6px solid @product.Color;" />
                                        }
                                        else
                                        {
                                            <img src="~/Resources/emptyImage.jpg" alt="" 
                                                 style="border: 6px solid @product.Color;"/>
                                        }
                                    </div>
                                </td>
                                <td>
                                     @Html.DisplayFor(p => product.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(p => product.Description)
                                </td>
                                <td>
                                    @Html.DisplayFor(p => product.Brand)
                                </td>
                                <td>
                                    @Html.DisplayFor(p => product.Quantity)
                                </td>
                                <td style="width: 10%">
                                    @if (User.IsInUserRole(UserRole.Admin))
                                    {
                                        <button class="btn btn-danger" data-type="remove-btn" data-id="@product.Id"
                                                title="@R.Delete">
                                            <i class="halflings-icon white trash"></i>
                                        </button>
                                    }
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
            </div>
            <div class="pagination pagination-centered">
                @Html.PagedListPager(Model.Items, page => Url.Action("Show", "ProductTable", new {page, count = @Model.PageInfo.ItemsCount, by = @Model.PageInfo.SortingOption, filter = Model.JsonFilters}))
            </div>
        </div>
    </div>
    
    <div id="RemovingModal" class="modal hide fade" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">@R.DeleteProductQuestion</h4>
                </div>
                <form method="post" action=@Url.Action("Delete", "Product") enctype="multipart/form-data">
                    @Html.AntiForgeryToken()
                    @Html.Hidden("productId", 0)
                    @Html.Hidden("redirectUrl", @Url.Action("Show", "ProductTable", new
               {
                   page = @Model.PageInfo.Page,
                   count = @Model.PageInfo.ItemsCount,
                   by = @Model.PageInfo.SortingOption,
                   filter = Model.JsonFilters
               }))
                    <div class="modal-body-central">
                        <input type="submit" class="btn btn-danger" id="removeBtnId" value="@R.Delete" />
                        <button class="btn btn-default" id="cancelDeleteBtnId">@R.Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </div>


    @section scripts
{
        <script>
            $(function () {
                var params = {
                    url:
                        '@Url.Action("Show", "ProductTable", new {page = @Model.PageInfo.Page, count = @Model.PageInfo.ItemsCount, filter = Model.JsonFilters})',
                    presentUrl:
                        '@Url.Action("Show", "ProductTable", new {page = @Model.PageInfo.Page, count = @Model.PageInfo.ItemsCount, by = @Model.PageInfo.SortingOption})',
                    sortingOption: '@Model.PageInfo.SortingOption',
                    deleteProductUrl: '@Url.Action("Delete", "Product")',
                    filters: '@Model.FilterInfo.FiltertsList',
                    IllegalCharsError: '@R.IllegalCharsError'
                };
                var sortingNamespace = window.Utils.getNamespace("SortableTable");
                sortingNamespace.init(params);
                var removingModalNamespace = window.Utils.getNamespace("RemovingModal");
                removingModalNamespace.initRemovingModal(params);
                var validationNamespace = window.Utils.getNamespace("Validation");
                validationNamespace.initValidation(params);
                var filterNamespace = window.Utils.getNamespace("Filter");
                filterNamespace.init(params);
            });
        </script>
        @Scripts.Render("~/Product/ProductTable/Scripts")
        @Scripts.Render("~/Product/Common/Sorting/Scripts")
        @Scripts.Render("~/Product/Common/Filter/Scripts")
    }

    @section stylesheets
{
        @Styles.Render("~/Product/ProductTable/css")
        @Styles.Render("~/Product/Common/Filter/css")
    }
}

else
{
    <h1>@R.YouDontHaveAccess</h1>
}
